# Build stage
FROM openjdk:11-jdk-slim AS build

# Install necessary dependencies
RUN apt-get update && apt-get install -y curl gzip wget unzip

# Download Coursier CLI binary and decompress it
RUN curl -fLo /tmp/cs.gz https://github.com/coursier/coursier/releases/download/v2.1.10/cs-x86_64-pc-linux.gz \
    && gzip -d /tmp/cs.gz \
    && mv /tmp/cs /usr/local/bin/cs \
    && chmod +x /usr/local/bin/cs

# Setup PATH
ENV PATH="/root/.local/share/coursier/bin:${PATH}"

# Install sbt
RUN cs install sbt

WORKDIR /app

COPY . /app

RUN sbt "hclGenerator/assembly"

# Run stage
FROM openjdk:11-jre-slim

WORKDIR /app

COPY --from=build /app/autoscaler/target/scala-3.2.2/cluster-creator.jar /app/cluster-creator.jar

# Download and install Terraform
RUN apt-get update && apt-get install -y wget unzip && \
    wget https://releases.hashicorp.com/terraform/1.4.6/terraform_1.4.6_linux_amd64.zip && \
    unzip terraform_1.4.6_linux_amd64.zip && \
    mv terraform /usr/local/bin/ && \
    rm terraform_1.4.6_linux_amd64.zip && \
    apt-get remove -y wget unzip && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/*

# Create ~/.terraformrc file with the specified content
RUN mkdir -p ~/.terraform.d && \
    echo 'provider_installation {' > ~/.terraformrc && \
    echo '  network_mirror {' >> ~/.terraformrc && \
    echo '    url = "https://terraform-mirror.yandexcloud.net/"' >> ~/.terraformrc && \
    echo '    include = ["registry.terraform.io/*/*"]' >> ~/.terraformrc && \
    echo '  }' >> ~/.terraformrc && \
    echo '  direct {' >> ~/.terraformrc && \
    echo '    exclude = ["registry.terraform.io/*/*"]' >> ~/.terraformrc && \
    echo '  }' >> ~/.terraformrc && \
    echo '}' >> ~/.terraformrc

CMD ["java", "-jar", "cluster-creator.jar"]